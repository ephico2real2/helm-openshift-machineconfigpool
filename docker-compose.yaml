version: '3'
services:
  mainline:
    build:
      context: .
      args:
        NGINX_VERSION: 1.17.9-perl
        BUILD_FILE: nginx.conf
    ports:
      - "8080:80"
    volumes:
      - ./mainline:/etc/nginx/conf.d
  stable:
    build:
      context: .
      args:
        NGINX_VERSION: ${DEFAULT_NGINX_VERSION}
        BUILD_FILE: nginx.conf
    ports:
      - "8081:80"
    volumes:
      - ./stable:/etc/nginx/conf.d
  alpine:
    build:
      context: .
      args:
        NGINX_VERSION: 1.17.9-alpine-perl
        BUILD_FILE: nginx.conf
    ports:
      - "8082:80"
    volumes:
      - ./alpine:/etc/nginx/conf.d




version: '3.7'
services:
  mainline:
    build:
      context: .
      args:
        NGINX_VERSION: 1.17.9-perl
        BUILD_FILE: debian.conf
      dockerfile: nginx.Dockerfile
    image: app:${NGINX_VERSION}
    ports:
      - "8080:80"
  stable:
    build:
      context: .
      args:
        NGINX_VERSION: ${DEFAULT_NGINX_VERSION}
        BUILD_FILE: debian.conf
      dockerfile: nginx.Dockerfile
    image: app:${NGINX_VERSION}
    ports:
      - "8081:80"
  alpine:
    build:
      context: .
      args:
        NGINX_VERSION: 1.17.9-alpine-perl
        BUILD_FILE: alpine.conf
      dockerfile: nginx.Dockerfile
    image: app:${NGINX_VERSION}
    ports:
      - "8082:80"




image: java-tests-repository:latest

before_script:
  - apt-get update
  - apt-get install -y maven

stages:
  - compline
  - test

compline:
  stage: compline
  script:
    - javac -d /src/tests/suites/ -cp /lib/junit-4.12.jar /data/sets/users.java

registration:
  stage: test
  script:
    - mvn clean test -Dtest=functional -Ddata_sets=users

payments:
  stage: test
  script:
    - mvn clean test -Dtest=performance -Ddata_sets=users

orders:
  stage: test
  script:
    - mvn clean test -Dtest=orders -Ddata_sets=users

test:
  stage: test
  script: echo "All tests are completed."
  parallel:
    matrix:
      - JOB_NAME: registration
      - JOB_NAME: payments
      - JOB_NAME: orders

